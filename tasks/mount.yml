---
- name: Ensure group's owner of the mount path exists
  group:
    name: "{{ item.mount_group }}"
    state: present
  when: item.mount_group is defined
  with_items: "{{ disk_devices }}"

- name: Ensure user's owner of the mount path exists
  user:
    name: "{{ item.mount_user }}"
    state: present
    group: "{{ item.mount_group |d(omit) }}"
  when: item.mount_user is defined
  with_items: "{{ disk_devices }}"

- name: Ensure the mount directory exists
  file:
    path: "{{ item.mount }}"
    owner: "{{ item.mount_user | d(disk_user) }}"
    group: "{{ item.mount_group | d(disk_group) }}"
    state: directory
    mode: "{{ item.mount_mode |d(omit) }}"
  with_items: "{{ disk_devices }}"
  tags:
    - disk

- name: Get UUID for device
  command: blkid -s UUID -o value "{{ item.device }}"
  register: disk_blkid_1
  with_items: "{{ disk_devices }}"
  when: item.device is defined
  changed_when: False
  tags:
    - disk

- name: Get UUID for partition
  command: blkid -s UUID -o value "{{ item.disk }}"
  register: disk_blkid_2
  with_items: "{{ disk_devices }}"
  when: item.device is not defined
  changed_when: False
  tags:
    - disk

- debug: var=disk_blkid_1

- name: Mount additional disk
  mount:
    name: "{{ item_mount.item.mount }}"
    src: "UUID={{ item_mount.stdout }}"
    state: "{{ item_mount.item.mount_state |d(disk_part_mount_state) }}"
    fstype: "{{ item_mount.item.fs_type |d(disk_part_mount_fstype) }}"
    opts: "{{ item_mount.item.mount_opts |d(disk_part_mount_opts) }}"
    passno: "{{ item_mount.item.mount_passno |d(0) }}"
  when: item_mount.rc is defined and item_mount.rc == 0
  with_items: "{{ disk_blkid_1.results }}"
  loop_control:
    loop_var: item_mount

- debug: var=disk_blkid_2

- name: Mount additional disk
  mount:
    name: "{{ item_mount.item.mount }}"
    src: "UUID={{ item_mount.stdout }}"
    state: "{{ item_mount.item.mount_state |d(disk_part_mount_state) }}"
    fstype: "{{ item_mount.item.fs_type |d(disk_part_mount_fstype) }}"
    opts: "{{ item_mount.item.mount_opts |d(disk_part_mount_opts) }}"
    passno: "{{ item_mount.item.mount_passno |d(0) }}"
  when: item_mount.rc is defined and item_mount.rc == 0
  with_items: "{{ disk_blkid_2.results }}"
  loop_control:
    loop_var: item_mount
